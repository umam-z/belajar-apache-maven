<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>zuper-programmer</groupId>
  <artifactId>belajar-apache-maven</artifactId>
  <version>1.0-SNAPSHOT</version>
  <!-- untuk memberitahu parent bahwa project ini merupakan project multi module -->
  <packaging>pom</packaging>

  <name>belajar-apache-maven</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <!-- menambahkan module -->
  <modules>
    <module>belajar-apache-maven-app</module>
    <module>belajar-apache-maven-data</module>
  </modules>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>22</maven.compiler.source>
    <maven.compiler.target>22</maven.compiler.target>
    <junit.version>4.11</junit.version>
    <gson.version>2.11.0</gson.version>
  </properties>
  <!-- dependency management berguna -->
  <dependencyManagement>
    <dependencies>
      <!-- boleh menambahkan dependency bawaan -->
      <dependency>
        <groupId>zuper-programmer</groupId>
        <artifactId>belajar-apache-maven-data</artifactId>
        <version>${project.version}</version>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>${gson.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
      <plugins>
        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <!-- plugin untuk membuat distribution file beserta dependency yang dibutuhkan  -->
        <plugin>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.7.1</version>
          <configuration>
            <descriptorRefs>
              <descriptorRef>jar-with-dependencies</descriptorRef>
            </descriptorRefs>
            <!-- untuk memberitahu plugin (assembly plugin) dimana main file-nya -->
            <archive>
              <manifest>
                <mainClass>zuper.programmer.maven.App</mainClass>
              </manifest>
            </archive>
          </configuration>
          <!-- untuk membundle menjadi satu distribution file(beserta semua dependency) -->
          <executions>
            <execution>
              <id>make-assembly</id> <!-- this is used for inheritance merges -->
              <phase>package</phase> <!-- bind to the packaging phase -->
              <goals>
                <goal>single</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
  <!-- jika ingin menambahkan repo sendiri  -->
  <repositories>
<!--    <repository>-->
<!--      <id></id>-->
<!--      <name></name>-->
<!--      <url></url>-->
<!--    </repository>-->
  </repositories>
</project>
